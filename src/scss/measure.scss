@import "mixins/vars";
@import "mixins/queries";

.measure-list {
  border: 1px solid $blueishgray;
}

.mesure-none {
  font-family: $font-roboto;
}

.measure-wrapper {
  position: relative;
  display: block;
  overflow: hidden;

  &:hover {
    > .share-measure {
      opacity: 1;
    }
  }

  @include mq($medium-and-up) {
    overflow: visible;
  }
}

.measure-body {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  min-height: 40px;

  text-decoration: none;
  border-top: 1px solid $lightgray;
  border-bottom: none; // override base link style
  padding: 13px 20px;
  color: $gray;
  transition: background-color 125ms ease, color 125ms ease;

  &.is-major {
    min-height: 65px;
    padding: 20px;
  }

  @include mq($medium-and-up) {
    flex-wrap: nowrap;
    padding: 13px 25px;

    &.is-major {
      padding: 15px 85px 15px 25px;
    }
  }

  &[href]:hover {
    background-color: $lightblueishgray;

    .measure-name {
      color: black;
    }
  }

  .measure-wrapper:first-child & {
    border-top: none;
  }
}


.measure-status {
  font-size: 0;
  padding: 6px 12px;
  min-width: 75px;
  margin-right: 25px;
  transition: background-color 125ms ease, color 125ms ease, border-color 125ms ease;

  @include mq($medium-and-up) {
    min-width: none;
    width: 100%;
    flex-shrink: 0;
    flex-basis: 75px;
  }

  &:before {
    content: '';
    display: block;
    border: 1px solid $mediumlightgray;
    border-radius: 50%;
    width: 15px;
    height: 15px;
    margin: 0 auto;

    .in-progress > & {
      border-color: $en-cours;
      background-color: $en-cours;
    }

    .done > & {
      border-color: $fait;
      background-color: $fait;
    }
  }

  .is-major > & {
    border: 1px solid $lightgray;
    font-family: $font-roboto;
    font-size: 14px;
    color: $gray;
    border-radius: 38px;
    text-align: center;

    &:before {
      content: none;
    }
  }

  .in-progress.is-major > & {
    border-color: $en-cours;
    background-color: $en-cours;
    color: white;
  }

  .done.is-major > & {
    border-color: $fait;
    background-color: $fait;
    color: white;
  }

  @include mq($medium-and-up) {
    margin-right: 20px;

    .is-major > & {
      font-size: 12px;
      padding: 5px 3px;
    }
  }
}

.measure-name {
  font-size: 14px;
  font-family: $font-roboto;
  flex: 1;
  color: $gray;
  margin-bottom: 10px;

  order: -1;
  flex-basis: 100%;

  .is-major > & {
    font-size: 16px;
    color: $darkergray;
  }

  .in-progress[href] &::after,
  .done[href] &::after {
    content: ' â†’';
  }

  @include mq($medium-and-up) {
    order: 0;
    flex-basis: auto;
    margin-bottom: 0;
  }
}

.measure-manifesto {
  margin-right: 12px;
  position: relative;

  // compensate for double divs rendered by react-svg
  // since the svg has known dimensions, force the layout
  flex: 1 0 26px;
  width: 26px;
  height: 26px;

  @include mq($medium-and-up) {
    margin-right: 16px;
  }

  svg {
    position: absolute;
    top: 0;
    bottom: 0;
    margin: auto;

    width: 26px;
    height: 26px;

    cursor: pointer;
  }
}

.measure-manifesto__tooltip {
  background-color: white;
  box-shadow: 0 2px 4px 0 rgba(black, 0.14);
}

.measure-vote {
  display: flex;
  align-items: center;
  position: absolute;
  bottom: 20px;
  right: 20px;

  > span {
    display: inline-block;
    margin-right: 7px;
    color: $gray;
    font-size: 12px;
    font-family: $font-roboto;
  }

  .is-major + & {
    bottom: 20px;
    right: 20px;
  }

  @include mq($medium-and-up) {
    bottom: auto;
    top: 9px;
    right: 26px;

    .is-major + & {
      top: 20px;
      right: 25px;
    }
  }
}

.measure-pending {
  position: absolute;
  bottom: 20px;
  right: 20px;
  height: 34px;
  width: 34px;
  border: 1px solid $blueishgray;
  border-radius: 3px;
  display: block;

  .is-major + & {
    bottom: 20px;
    right: 20px;
  }

  @include mq($medium-and-up) {
    bottom: auto;
    top: 9px;
    right: 26px;

    .is-major + & {
      top: 20px;
      right: 25px;
    }
  }

  &:before {
    content: '';
    display: block;
    border-left: 3px solid $blueishgray;
    border-bottom: 3px solid $blueishgray;
    border-radius: 50%;
    height: 15px;
    width: 15px;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: auto;

    animation-name: spin;
    animation-duration: 500ms;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
  }
}

.measure-accordion {
  position: relative;
}

.measure-accordion__trigger {
  display: block;
  text-align: center;
  background-color: white;
  cursor: pointer;
  padding: 12px 0;
  font-family: $font-roboto;
  font-size: 16px;
  border-top: 1px solid $blueishgray;
  color: $gray;

  transition: background-color 125ms ease;

  > span {
    display: flex;
    align-items: center;
    justify-content: center;

    > svg {
      margin-right: 5px;
    }
  }

  &:hover {
    background-color: $offwhite;
  }

  .to-bottom & {
    position: absolute;
    bottom: -50px;
    left: -1px;
    right: -1px;

    border-left: 1px solid $blueishgray;
    border-right: 1px solid $blueishgray;

    + .measure-accordion__contentOuter {
      margin-bottom: 50px;
    }
  }

  &.is-closed .up {
    display: none;
  }

  &.is-open .down {
    display: none;
  }
}

.measure-accordion__contentInner {
  border-top: 1px solid $blueishgray;
}

.share-measure {
  position: absolute;
  display: flex;
  justify-content: space-between;
  align-items: center;
  top: 0;
  right: -105px;
  width: 90px;
  height: 100%;

  opacity: 0;
  transition: opacity 125ms ease;

  &:hover {
    cursor: pointer;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }

}
